name: Test, build and deploy the approval app
on:
  push:
    tags:
      - approval/v*
    paths:
      - 'approval/**'
      - '.github/workflows/approval-test-and-deploy.yml'

defaults:
  run:
    working-directory: ./approval

env:
  IMAGE_WITHOUT_TAG: docker.pkg.github.com/${{ github.repository }}/approval

jobs:
  test:
    name: Run unit tests and static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Output some debug information about the PHP version
        run: |
          php -v
          php -i
          php -m
      - name: Validate composer files
        run: composer validate --strict
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-ansi
      - name: Run unit tests
        run: composer run test
      - name: Run static analysis
        run: composer run sa

  build:
    name: Build docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE=${IMAGE_WITHOUT_TAG}:${GITHUB_SHA}
          PRODUCTION_TAG=$(echo ${GITHUB_REF} | cut -d / -f 4 -s)

          if [[ ! -z "${PRODUCTION_TAG}" ]]; then
            IMAGE=${IMAGE_WITHOUT_TAG}:${PRODUCTION_TAG}
          fi

          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

          echo ${IMAGE} > image-name.txt
      - uses: actions/upload-artifact@v2
        with:
          name: image-name
          path: image-name.txt

  deploy-dev-gcp:
    name: Deploy to dev-gcp
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: image-name
      - run: echo ::set-env name=IMAGE::$(cat image-name.txt)
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_KEY }}
          CLUSTER: dev-gcp
          RESOURCE: ./approval/nais.yml
          VARS: ./approval/dev-gcp-vars.yml

  deploy-prod-gcp:
    if: ${{ startWith(github.ref, "refs/tags/approval/v") }}
    name: Deploy to prod-gcp
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: image-name
      - run: echo ::set-env name=IMAGE::$(cat image-name.txt)
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_KEY }}
          CLUSTER: prod-gcp
          RESOURCE: ./approval/nais.yml
          VARS: ./approval/prod-gcp-vars.yml