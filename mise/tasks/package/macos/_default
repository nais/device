#!/usr/bin/env bash
# vim:ft=bash
#MISE description="Package deb"
#MISE depends=["thirdparty:wireguard","thirdparty:wireguard-go","build:macos"]

if [ -z "$VERSION" ]; then
	echo "VERSION not set."
	exit 1
fi

if [ -z "$RELEASE" ]; then
	echo "RELEASE not set."
	exit 1
fi

if [ "$RELEASE" == "true" ]; then
	if [ -z "$APPLE_NOTARIZE_AUTH_KEY_P8_BASE64" ]; then
		echo "APPLE_NOTARIZE_AUTH_KEY_P8_BASE64 not set."
		exit 1
	fi

	if [ -z "$APPLE_NOTARIZE_D" ]; then
		echo "APPLE_NOTARIZE_D not set."
		exit 1
	fi

	if [ -z "$APPLE_NOTARIZE_I" ]; then
		echo "APPLE_NOTARIZE_I not set."
		exit 1
	fi
fi

build_dir="$(mktemp -d)"
app_dir="$build_dir/naisdevice.app"
build_plist="$build_dir/naisdevice.plist"

app_cert='Developer ID Application: Arbeids- og velferdsetaten (GC9RAU27PY)'
install_cert='Developer ID Installer: Arbeids- og velferdsetaten (GC9RAU27PY)'
pkgid="io.nais.device"
pkg_path="./naisdevice.pkg"

# Prepare notarization key
base64 -d >AuthKey.p8 <<<"$APPLE_NOTARIZE_AUTH_KEY_P8_BASE64"

# Build and sign app
mkdir -p "$app_dir/Contents/"{MacOS,Resources}
cp ./bin/macos-client/* "$build_dir/naisdevice.app/Contents/MacOS/"
cp ./assets/macos/icon/naisdevice.icns "$build_dir/naisdevice.app/Contents/Resources/"

sed "s/VERSIONSTRING/$VERSION/" ./assets/macos/Info.plist.tpl >"$build_dir/naisdevice.app/Contents/Info.plist"

codesign -s "$app_cert" -f -v --timestamp --deep --options runtime "$build_dir/naisdevice.app/Contents/MacOS/"*
codesign -s "$app_cert" -f -v --timestamp --deep --options runtime "$build_dir/naisdevice.app/Contents/Info.plist"

# Build and sign pkg
mkdir -p "$build_dir/"{scripts/,pkgroot/}
cp ./assets/macos/{preinstall,postinstall} "$build_dir/scripts/"
cp -r "$app_dir" "$build_dir/pkgroot/"
xattr -rc "$build_dir/pkgroot/$(basename "$app_dir")"

pkgbuild --analyze --root "$build_dir/pkgroot/" "$build_plist"
pkgbuild \
	--root "$build_dir/pkgroot/" \
	--component-plist "$build_plist" \
	--identifier "$pkgid" \
	--install-location "/Applications" \
	--scripts "$build_dir/scripts" \
	--version "$VERSION" \
	--sign "$install_cert" \
	--ownership recommended \
	"$pkg_path"

if [ "$RELEASE" == "true" ]; then
	xcrun notarytool submit "$pkg_path" \
		-k AuthKey.p8 \
		-d "$APPLE_NOTARIZE_D" \
		-i "$APPLE_NOTARIZE_I" \
		--wait
	xcrun stapler staple "$pkg_path"
fi
