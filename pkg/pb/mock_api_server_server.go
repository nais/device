// Code generated by mockery v2.30.1. DO NOT EDIT.

package pb

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockAPIServerServer is an autogenerated mock type for the APIServerServer type
type MockAPIServerServer struct {
	mock.Mock
}

// EnrollGateway provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) EnrollGateway(_a0 context.Context, _a1 *ModifyGatewayRequest) (*ModifyGatewayResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ModifyGatewayResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) (*ModifyGatewayResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) *ModifyGatewayResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ModifyGatewayResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *ModifyGatewayRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeviceConfiguration provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) GetDeviceConfiguration(_a0 *GetDeviceConfigurationRequest, _a1 APIServer_GetDeviceConfigurationServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*GetDeviceConfigurationRequest, APIServer_GetDeviceConfigurationServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetGateway provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) GetGateway(_a0 context.Context, _a1 *ModifyGatewayRequest) (*Gateway, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *Gateway
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) (*Gateway, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) *Gateway); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Gateway)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *ModifyGatewayRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGatewayConfiguration provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) GetGatewayConfiguration(_a0 *GetGatewayConfigurationRequest, _a1 APIServer_GetGatewayConfigurationServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*GetGatewayConfigurationRequest, APIServer_GetGatewayConfigurationServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSessions provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) GetSessions(_a0 context.Context, _a1 *GetSessionsRequest) (*GetSessionsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetSessionsResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *GetSessionsRequest) (*GetSessionsResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *GetSessionsRequest) *GetSessionsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetSessionsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *GetSessionsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListGateways provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) ListGateways(_a0 *ListGatewayRequest, _a1 APIServer_ListGatewaysServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ListGatewayRequest, APIServer_ListGatewaysServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Login provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) Login(_a0 context.Context, _a1 *APIServerLoginRequest) (*APIServerLoginResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *APIServerLoginResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *APIServerLoginRequest) (*APIServerLoginResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *APIServerLoginRequest) *APIServerLoginResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*APIServerLoginResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *APIServerLoginRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateGateway provides a mock function with given fields: _a0, _a1
func (_m *MockAPIServerServer) UpdateGateway(_a0 context.Context, _a1 *ModifyGatewayRequest) (*ModifyGatewayResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ModifyGatewayResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) (*ModifyGatewayResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *ModifyGatewayRequest) *ModifyGatewayResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ModifyGatewayResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *ModifyGatewayRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAPIServerServer provides a mock function with given fields:
func (_m *MockAPIServerServer) mustEmbedUnimplementedAPIServerServer() {
	_m.Called()
}

// NewMockAPIServerServer creates a new instance of MockAPIServerServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAPIServerServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAPIServerServer {
	mock := &MockAPIServerServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
