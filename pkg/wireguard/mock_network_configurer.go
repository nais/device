// Code generated by mockery v2.32.2. DO NOT EDIT.

package wireguard

import mock "github.com/stretchr/testify/mock"

// MockNetworkConfigurer is an autogenerated mock type for the NetworkConfigurer type
type MockNetworkConfigurer struct {
	mock.Mock
}

// ApplyWireGuardConfig provides a mock function with given fields: peers
func (_m *MockNetworkConfigurer) ApplyWireGuardConfig(peers []Peer) error {
	ret := _m.Called(peers)

	var r0 error
	if rf, ok := ret.Get(0).(func([]Peer) error); ok {
		r0 = rf(peers)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ForwardRoutes provides a mock function with given fields: routes
func (_m *MockNetworkConfigurer) ForwardRoutes(routes []string) error {
	ret := _m.Called(routes)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(routes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetupIPTables provides a mock function with given fields:
func (_m *MockNetworkConfigurer) SetupIPTables() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetupInterface provides a mock function with given fields:
func (_m *MockNetworkConfigurer) SetupInterface() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockNetworkConfigurer creates a new instance of MockNetworkConfigurer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNetworkConfigurer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNetworkConfigurer {
	mock := &MockNetworkConfigurer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
