// Code generated by mockery v2.30.1. DO NOT EDIT.

package auth

import mock "github.com/stretchr/testify/mock"

// MockUsernamePasswordAuthenticator is an autogenerated mock type for the UsernamePasswordAuthenticator type
type MockUsernamePasswordAuthenticator struct {
	mock.Mock
}

// Authenticate provides a mock function with given fields: username, password
func (_m *MockUsernamePasswordAuthenticator) Authenticate(username string, password string) error {
	ret := _m.Called(username, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockUsernamePasswordAuthenticator creates a new instance of MockUsernamePasswordAuthenticator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUsernamePasswordAuthenticator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUsernamePasswordAuthenticator {
	mock := &MockUsernamePasswordAuthenticator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
