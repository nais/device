// Code generated by mockery 2.9.2. DO NOT EDIT.

package mocks

import (
	secretmanager "github.com/nais/device/pkg/secretmanager"
	mock "github.com/stretchr/testify/mock"
)

// SecretManager is an autogenerated mock type for the SecretManager type
type SecretManager struct {
	mock.Mock
}

// DisableSecret provides a mock function with given fields: _a0
func (_m *SecretManager) DisableSecret(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSecrets provides a mock function with given fields: _a0
func (_m *SecretManager) GetSecrets(_a0 map[string]string) ([]*secretmanager.Secret, error) {
	ret := _m.Called(_a0)

	var r0 []*secretmanager.Secret
	if rf, ok := ret.Get(0).(func(map[string]string) []*secretmanager.Secret); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*secretmanager.Secret)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
